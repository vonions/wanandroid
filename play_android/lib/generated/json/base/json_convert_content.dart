// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:play_android/bean/home_list_result_entity.dart';
import 'package:play_android/generated/json/home_list_result_entity_helper.dart';
import 'package:play_android/bean/ask_ans_entity.dart';
import 'package:play_android/generated/json/ask_ans_entity_helper.dart';
import 'package:play_android/bean/base_result_entity.dart';
import 'package:play_android/generated/json/base_result_entity_helper.dart';
import 'package:play_android/bean/home_banner_result_entity.dart';
import 'package:play_android/generated/json/home_banner_result_entity_helper.dart';
import 'package:play_android/bean/interviewabout_entity.dart';
import 'package:play_android/generated/json/interviewabout_entity_helper.dart';
import 'package:play_android/bean/hot_key_result_entity.dart';
import 'package:play_android/generated/json/hot_key_result_entity_helper.dart';
import 'package:play_android/bean/login_result_entity.dart';
import 'package:play_android/generated/json/login_result_entity_helper.dart';
import 'package:play_android/bean/search_result_entity.dart';
import 'package:play_android/generated/json/search_result_entity_helper.dart';
import 'package:play_android/bean/collection_list_entity.dart';
import 'package:play_android/generated/json/collection_list_entity_helper.dart';
import 'package:play_android/bean/home_hot_net_result_entity.dart';
import 'package:play_android/generated/json/home_hot_net_result_entity_helper.dart';
import 'package:play_android/bean/jifen_entity.dart';
import 'package:play_android/generated/json/jifen_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case HomeListResultEntity:
			return homeListResultEntityFromJson(data as HomeListResultEntity, json) as T;			case HomeListResultData:
			return homeListResultDataFromJson(data as HomeListResultData, json) as T;			case HomeListResultDataData:
			return homeListResultDataDataFromJson(data as HomeListResultDataData, json) as T;			case AskAnsEntity:
			return askAnsEntityFromJson(data as AskAnsEntity, json) as T;			case AskAnsData:
			return askAnsDataFromJson(data as AskAnsData, json) as T;			case AskAnsDataData:
			return askAnsDataDataFromJson(data as AskAnsDataData, json) as T;			case AskAnsDataDatasTag:
			return askAnsDataDatasTagFromJson(data as AskAnsDataDatasTag, json) as T;			case BaseResultEntity:
			return baseResultEntityFromJson(data as BaseResultEntity, json) as T;			case HomeBannerResultEntity:
			return homeBannerResultEntityFromJson(data as HomeBannerResultEntity, json) as T;			case HomeBannerResultData:
			return homeBannerResultDataFromJson(data as HomeBannerResultData, json) as T;			case InterviewaboutEntity:
			return interviewaboutEntityFromJson(data as InterviewaboutEntity, json) as T;			case InterviewaboutData:
			return interviewaboutDataFromJson(data as InterviewaboutData, json) as T;			case InterviewaboutDataData:
			return interviewaboutDataDataFromJson(data as InterviewaboutDataData, json) as T;			case HotKeyResultEntity:
			return hotKeyResultEntityFromJson(data as HotKeyResultEntity, json) as T;			case HotKeyResultData:
			return hotKeyResultDataFromJson(data as HotKeyResultData, json) as T;			case LoginResultEntity:
			return loginResultEntityFromJson(data as LoginResultEntity, json) as T;			case LoginResultData:
			return loginResultDataFromJson(data as LoginResultData, json) as T;			case SearchResultEntity:
			return searchResultEntityFromJson(data as SearchResultEntity, json) as T;			case SearchResultData:
			return searchResultDataFromJson(data as SearchResultData, json) as T;			case SearchResultDataData:
			return searchResultDataDataFromJson(data as SearchResultDataData, json) as T;			case CollectionListEntity:
			return collectionListEntityFromJson(data as CollectionListEntity, json) as T;			case CollectionListData:
			return collectionListDataFromJson(data as CollectionListData, json) as T;			case CollectionListDataData:
			return collectionListDataDataFromJson(data as CollectionListDataData, json) as T;			case HomeHotNetResultEntity:
			return homeHotNetResultEntityFromJson(data as HomeHotNetResultEntity, json) as T;			case HomeHotNetResultData:
			return homeHotNetResultDataFromJson(data as HomeHotNetResultData, json) as T;			case JifenEntity:
			return jifenEntityFromJson(data as JifenEntity, json) as T;			case JifenData:
			return jifenDataFromJson(data as JifenData, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case HomeListResultEntity:
			return homeListResultEntityToJson(data as HomeListResultEntity);			case HomeListResultData:
			return homeListResultDataToJson(data as HomeListResultData);			case HomeListResultDataData:
			return homeListResultDataDataToJson(data as HomeListResultDataData);			case AskAnsEntity:
			return askAnsEntityToJson(data as AskAnsEntity);			case AskAnsData:
			return askAnsDataToJson(data as AskAnsData);			case AskAnsDataData:
			return askAnsDataDataToJson(data as AskAnsDataData);			case AskAnsDataDatasTag:
			return askAnsDataDatasTagToJson(data as AskAnsDataDatasTag);			case BaseResultEntity:
			return baseResultEntityToJson(data as BaseResultEntity);			case HomeBannerResultEntity:
			return homeBannerResultEntityToJson(data as HomeBannerResultEntity);			case HomeBannerResultData:
			return homeBannerResultDataToJson(data as HomeBannerResultData);			case InterviewaboutEntity:
			return interviewaboutEntityToJson(data as InterviewaboutEntity);			case InterviewaboutData:
			return interviewaboutDataToJson(data as InterviewaboutData);			case InterviewaboutDataData:
			return interviewaboutDataDataToJson(data as InterviewaboutDataData);			case HotKeyResultEntity:
			return hotKeyResultEntityToJson(data as HotKeyResultEntity);			case HotKeyResultData:
			return hotKeyResultDataToJson(data as HotKeyResultData);			case LoginResultEntity:
			return loginResultEntityToJson(data as LoginResultEntity);			case LoginResultData:
			return loginResultDataToJson(data as LoginResultData);			case SearchResultEntity:
			return searchResultEntityToJson(data as SearchResultEntity);			case SearchResultData:
			return searchResultDataToJson(data as SearchResultData);			case SearchResultDataData:
			return searchResultDataDataToJson(data as SearchResultDataData);			case CollectionListEntity:
			return collectionListEntityToJson(data as CollectionListEntity);			case CollectionListData:
			return collectionListDataToJson(data as CollectionListData);			case CollectionListDataData:
			return collectionListDataDataToJson(data as CollectionListDataData);			case HomeHotNetResultEntity:
			return homeHotNetResultEntityToJson(data as HomeHotNetResultEntity);			case HomeHotNetResultData:
			return homeHotNetResultDataToJson(data as HomeHotNetResultData);			case JifenEntity:
			return jifenEntityToJson(data as JifenEntity);			case JifenData:
			return jifenDataToJson(data as JifenData);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'HomeListResultEntity':
			return HomeListResultEntity().fromJson(json);			case 'HomeListResultData':
			return HomeListResultData().fromJson(json);			case 'HomeListResultDataData':
			return HomeListResultDataData().fromJson(json);			case 'AskAnsEntity':
			return AskAnsEntity().fromJson(json);			case 'AskAnsData':
			return AskAnsData().fromJson(json);			case 'AskAnsDataData':
			return AskAnsDataData().fromJson(json);			case 'AskAnsDataDatasTag':
			return AskAnsDataDatasTag().fromJson(json);			case 'BaseResultEntity':
			return BaseResultEntity().fromJson(json);			case 'HomeBannerResultEntity':
			return HomeBannerResultEntity().fromJson(json);			case 'HomeBannerResultData':
			return HomeBannerResultData().fromJson(json);			case 'InterviewaboutEntity':
			return InterviewaboutEntity().fromJson(json);			case 'InterviewaboutData':
			return InterviewaboutData().fromJson(json);			case 'InterviewaboutDataData':
			return InterviewaboutDataData().fromJson(json);			case 'HotKeyResultEntity':
			return HotKeyResultEntity().fromJson(json);			case 'HotKeyResultData':
			return HotKeyResultData().fromJson(json);			case 'LoginResultEntity':
			return LoginResultEntity().fromJson(json);			case 'LoginResultData':
			return LoginResultData().fromJson(json);			case 'SearchResultEntity':
			return SearchResultEntity().fromJson(json);			case 'SearchResultData':
			return SearchResultData().fromJson(json);			case 'SearchResultDataData':
			return SearchResultDataData().fromJson(json);			case 'CollectionListEntity':
			return CollectionListEntity().fromJson(json);			case 'CollectionListData':
			return CollectionListData().fromJson(json);			case 'CollectionListDataData':
			return CollectionListDataData().fromJson(json);			case 'HomeHotNetResultEntity':
			return HomeHotNetResultEntity().fromJson(json);			case 'HomeHotNetResultData':
			return HomeHotNetResultData().fromJson(json);			case 'JifenEntity':
			return JifenEntity().fromJson(json);			case 'JifenData':
			return JifenData().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'HomeListResultEntity':
			return List<HomeListResultEntity>();			case 'HomeListResultData':
			return List<HomeListResultData>();			case 'HomeListResultDataData':
			return List<HomeListResultDataData>();			case 'AskAnsEntity':
			return List<AskAnsEntity>();			case 'AskAnsData':
			return List<AskAnsData>();			case 'AskAnsDataData':
			return List<AskAnsDataData>();			case 'AskAnsDataDatasTag':
			return List<AskAnsDataDatasTag>();			case 'BaseResultEntity':
			return List<BaseResultEntity>();			case 'HomeBannerResultEntity':
			return List<HomeBannerResultEntity>();			case 'HomeBannerResultData':
			return List<HomeBannerResultData>();			case 'InterviewaboutEntity':
			return List<InterviewaboutEntity>();			case 'InterviewaboutData':
			return List<InterviewaboutData>();			case 'InterviewaboutDataData':
			return List<InterviewaboutDataData>();			case 'HotKeyResultEntity':
			return List<HotKeyResultEntity>();			case 'HotKeyResultData':
			return List<HotKeyResultData>();			case 'LoginResultEntity':
			return List<LoginResultEntity>();			case 'LoginResultData':
			return List<LoginResultData>();			case 'SearchResultEntity':
			return List<SearchResultEntity>();			case 'SearchResultData':
			return List<SearchResultData>();			case 'SearchResultDataData':
			return List<SearchResultDataData>();			case 'CollectionListEntity':
			return List<CollectionListEntity>();			case 'CollectionListData':
			return List<CollectionListData>();			case 'CollectionListDataData':
			return List<CollectionListDataData>();			case 'HomeHotNetResultEntity':
			return List<HomeHotNetResultEntity>();			case 'HomeHotNetResultData':
			return List<HomeHotNetResultData>();			case 'JifenEntity':
			return List<JifenEntity>();			case 'JifenData':
			return List<JifenData>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}